import { DeploymentConfig, ClientError, DeploymentToken } from '../deploy/types.js';

declare const deployDefaults: {
    [key: string]: string | number;
};
declare function errorHandler(error: any): void;
declare function getBuildCommandFromLockFile(config: DeploymentConfig): string;
declare enum Header {
    OxygenNamespaceHandle = "X-Oxygen-Namespace-Handle"
}
declare function isClientError(error: unknown): error is ClientError;
declare function loadPackageJson(projectFolder?: string): any;
declare function stderrLogger(log: string): void;
declare const maxLabelLength = 375;
declare function parseToken(inputToken: string): DeploymentToken;
interface VerifyConfigParams {
    config: DeploymentConfig;
    performedBuild?: boolean;
}
declare function verifyConfig({ config, performedBuild, }: VerifyConfigParams): Promise<void>;

export { Header, deployDefaults, errorHandler, getBuildCommandFromLockFile, isClientError, loadPackageJson, maxLabelLength, parseToken, stderrLogger, verifyConfig };
