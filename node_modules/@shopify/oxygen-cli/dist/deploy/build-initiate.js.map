{"version":3,"sources":["../../src/deploy/build-initiate.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAqB;AAC7B,SAAQ,kBAAiB;AACzB,SAAgB,uBAAsB;AAEtC,SAAQ,cAAc,cAAa;AAGnC;AAAA,EACE;AAAA,OAGK;AASP,eAAsB,cACpB,SACgC;AAChC,QAAM,EAAC,QAAQ,QAAQ,aAAa,SAAS,CAAC,EAAC,IAAI;AAEnD,QAAM,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAmC,MAAM,eAAe;AAAA,MAC5D,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK,GAAG,OAAO,aAAa;AAAA,MAC5B,OAAO,OAAO,gBAAgB;AAAA,MAC9B;AAAA,MACA,cAAc;AAAA,QACZ,CAAC,OAAO,qBAAqB,GAAG,OAAO,gBAAgB;AAAA,MACzD;AAAA,IACF,CAAC;AAED,QAAI,SAAS,cAAc,WAAW,UAAU,GAAG;AACjD,YAAM,IAAI;AAAA,QACR,2BAA2B,SAAS,cAAc,WAAW,CAAC,GAAG,OAAO;AAAA,MAC1E;AAAA,IACF;AACA;AAAA,MACE,wCAAwC,SAAS,cAAc,MAAM,EAAE;AAAA,MACvE;AAAA,IACF;AAEA,WAAO,SAAS;AAAA,EAClB,SAAS,OAAO;AACd,iBAAa,KAAK;AAElB,UAAM;AAAA,EACR;AACF","sourcesContent":["import {graphqlRequest} from '@shopify/cli-kit/node/api/graphql';\nimport {AbortError} from '@shopify/cli-kit/node/error';\nimport {Logger, outputCompleted} from '@shopify/cli-kit/node/output';\n\nimport {errorHandler, Header} from '../utils/utils.js';\n\nimport {EnvironmentInput, DeploymentConfig} from './types.js';\nimport {\n  BuildInitiateQuery,\n  BuildInitiateQueryData,\n  BuildInitiateResponse,\n} from './graphql/build-initiate.js';\n\ninterface BuildInitiateOptions {\n  config: DeploymentConfig;\n  logger: Logger;\n  environment?: EnvironmentInput;\n  labels?: string[];\n}\n\nexport async function buildInitiate(\n  options: BuildInitiateOptions,\n): Promise<BuildInitiateResponse> {\n  const {config, logger, environment, labels = []} = options;\n\n  const variables = {\n    environment,\n    labels,\n  };\n\n  try {\n    const response: BuildInitiateQueryData = await graphqlRequest({\n      query: BuildInitiateQuery,\n      api: 'Oxygen',\n      url: `${config.deploymentUrl}/api/v2/admin/graphql`,\n      token: config.deploymentToken.accessToken,\n      variables,\n      addedHeaders: {\n        [Header.OxygenNamespaceHandle]: config.deploymentToken.namespace,\n      },\n    });\n\n    if (response.buildInitiate.userErrors.length >= 1) {\n      throw new AbortError(\n        `Failed to create build. ${response.buildInitiate.userErrors[0]?.message}`,\n      );\n    }\n    outputCompleted(\n      `Build initiated successfully with id ${response.buildInitiate.build.id}.`,\n      logger,\n    );\n\n    return response.buildInitiate;\n  } catch (error) {\n    errorHandler(error);\n\n    throw error;\n  }\n}\n"]}