{"version":3,"sources":["../../src/deploy/types.ts"],"names":["FileType"],"mappings":"AAgEO,IAAK,WAAL,kBAAKA,cAAL;AACL,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,WAAQ;AAFE,SAAAA;AAAA,GAAA;AASL,MAAM,0BAA0B,MAAM;AAAC","sourcesContent":["export interface Build {\n  id: string;\n  assetPath: string;\n}\n\nexport interface ClientError extends Error {\n  statusCode: number;\n}\n\nexport interface DeploymentHooks {\n  buildFunction?: (urlPath?: string) => Promise<void>;\n  onVerificationStart?: () => void;\n  onVerificationComplete?: () => void;\n  onVerificationError?: (error: Error) => void;\n  onUploadFilesStart?: () => void;\n  onUploadFilesError?: (error: Error) => void;\n  onUploadFilesComplete?: () => void;\n}\n\nexport interface DeploymentConfig {\n  assetsDir?: string;\n  bugsnag: boolean;\n  buildCommand?: string;\n  deploymentToken: DeploymentToken;\n  deploymentUrl: string;\n  environmentTag?: string;\n  metadata: {\n    description?: string;\n    user?: string;\n    version?: string;\n    url?: string;\n  };\n  publicDeployment: boolean;\n  rootPath?: string;\n  skipBuild: boolean;\n  skipVerification: boolean;\n  verificationMaxDuration: number;\n  workerDir?: string;\n  workerOnly: boolean;\n}\n\nexport interface DeploymentToken {\n  accessToken: string;\n  allowedResource: string;\n  appId: string;\n  client: string;\n  expiresAt: string;\n  namespace: string;\n  namespaceId: string;\n}\n\nexport interface DeploymentManifestFile {\n  filePath: string;\n  fileSize: number;\n  mimeType: string;\n  fileHash: string;\n  fileType: string;\n}\n\nexport interface EnvironmentInput {\n  handle?: string;\n  tag?: string;\n}\n\nexport enum FileType {\n  Worker = 'WORKER',\n  Asset = 'ASSET',\n}\n\nexport interface OxygenError {\n  message: string;\n}\n\nexport class VerificationError extends Error {}\n"]}