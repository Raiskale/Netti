{"version":3,"sources":["../../src/deploy/deployment-cancel.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAqB;AAC7B,SAAQ,kBAAiB;AACzB,SAAgB,kBAAiB;AAEjC,SAAQ,cAAc,cAAa;AAGnC;AAAA,EACE;AAAA,OAGK;AASP,eAAsB,iBACpB,SACmC;AACnC,QAAM,EAAC,QAAQ,cAAc,QAAQ,OAAM,IAAI;AAE/C,QAAM,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAsC,MAAM,eAAe;AAAA,MAC/D,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK,GAAG,OAAO,aAAa;AAAA,MAC5B,OAAO,OAAO,gBAAgB;AAAA,MAC9B;AAAA,MACA,cAAc;AAAA,QACZ,CAAC,OAAO,qBAAqB,GAAG,OAAO,gBAAgB;AAAA,MACzD;AAAA,IACF,CAAC;AAED,QAAI,SAAS,iBAAiB,WAAW,UAAU,GAAG;AACpD,YAAM,IAAI;AAAA,QACR,gCAAgC,SAAS,iBAAiB,WAAW,CAAC,GAAG,OAAO;AAAA,MAClF;AAAA,IACF;AACA,eAAW,sBAAsB,YAAY,eAAe,MAAM;AAElE,WAAO,SAAS;AAAA,EAClB,SAAS,OAAO;AACd,iBAAa,KAAK;AAElB,UAAM;AAAA,EACR;AACF","sourcesContent":["import {graphqlRequest} from '@shopify/cli-kit/node/api/graphql';\nimport {AbortError} from '@shopify/cli-kit/node/error';\nimport {Logger, outputInfo} from '@shopify/cli-kit/node/output';\n\nimport {errorHandler, Header} from '../utils/utils.js';\n\nimport type {DeploymentConfig} from './types.js';\nimport {\n  DeploymentCancelQuery,\n  DeploymentCancelQueryData,\n  DeploymentCancelResponse,\n} from './graphql/deployment-cancel.js';\n\ninterface DeploymentCancelOptions {\n  config: DeploymentConfig;\n  deploymentId: string;\n  reason: string;\n  logger: Logger;\n}\n\nexport async function deploymentCancel(\n  options: DeploymentCancelOptions,\n): Promise<DeploymentCancelResponse> {\n  const {config, deploymentId, reason, logger} = options;\n\n  const variables = {\n    deploymentId,\n    reason,\n  };\n\n  try {\n    const response: DeploymentCancelQueryData = await graphqlRequest({\n      query: DeploymentCancelQuery,\n      api: 'Oxygen',\n      url: `${config.deploymentUrl}/api/v2/admin/graphql`,\n      token: config.deploymentToken.accessToken,\n      variables,\n      addedHeaders: {\n        [Header.OxygenNamespaceHandle]: config.deploymentToken.namespace,\n      },\n    });\n\n    if (response.deploymentCancel.userErrors.length >= 1) {\n      throw new AbortError(\n        `Failed to cancel deployment: ${response.deploymentCancel.userErrors[0]?.message}`,\n      );\n    }\n    outputInfo(`Deployment with id ${deploymentId} cancelled.`, logger);\n\n    return response.deploymentCancel;\n  } catch (error) {\n    errorHandler(error);\n\n    throw error;\n  }\n}\n"]}