import { graphqlRequest } from '@shopify/cli-kit/node/api/graphql';
import { AbortError } from '@shopify/cli-kit/node/error';
import { outputCompleted } from '@shopify/cli-kit/node/output';
import { Header, errorHandler } from '../utils/utils.js';
import { BuildInitiateQuery } from './graphql/build-initiate.js';

async function buildInitiate(options) {
  const { config, logger, environment, labels = [] } = options;
  const variables = {
    environment,
    labels
  };
  try {
    const response = await graphqlRequest({
      query: BuildInitiateQuery,
      api: "Oxygen",
      url: `${config.deploymentUrl}/api/v2/admin/graphql`,
      token: config.deploymentToken.accessToken,
      variables,
      addedHeaders: {
        [Header.OxygenNamespaceHandle]: config.deploymentToken.namespace
      }
    });
    if (response.buildInitiate.userErrors.length >= 1) {
      throw new AbortError(
        `Failed to create build. ${response.buildInitiate.userErrors[0]?.message}`
      );
    }
    outputCompleted(
      `Build initiated successfully with id ${response.buildInitiate.build.id}.`,
      logger
    );
    return response.buildInitiate;
  } catch (error) {
    errorHandler(error);
    throw error;
  }
}

export { buildInitiate };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=build-initiate.js.map