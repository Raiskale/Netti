{"version":3,"sources":["../../src/deploy/deployment-complete.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAqB;AAC7B,SAAQ,kBAAiB;AAEzB,SAAQ,cAAc,cAAa;AAEnC;AAAA,EACE;AAAA,OAGK;AAGP,eAAsB,mBACpB,QACA,cACqC;AACrC,QAAM,YAAY;AAAA,IAChB;AAAA,EACF;AAEA,MAAI;AACF,UAAM,WAAwC,MAAM,eAAe;AAAA,MACjE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK,GAAG,OAAO,aAAa;AAAA,MAC5B,OAAO,OAAO,gBAAgB;AAAA,MAC9B;AAAA,MACA,cAAc;AAAA,QACZ,CAAC,OAAO,qBAAqB,GAAG,OAAO,gBAAgB;AAAA,MACzD;AAAA,IACF,CAAC;AAED,QAAI,SAAS,mBAAmB,WAAW,UAAU,GAAG;AACtD,YAAM,IAAI;AAAA,QACR,kCAAkC,SAAS,mBAAmB,WAAW,CAAC,GAAG,OAAO;AAAA,MACtF;AAAA,IACF;AAEA,WAAO,SAAS;AAAA,EAClB,SAAS,OAAO;AACd,iBAAa,KAAK;AAElB,UAAM;AAAA,EACR;AACF","sourcesContent":["import {graphqlRequest} from '@shopify/cli-kit/node/api/graphql';\nimport {AbortError} from '@shopify/cli-kit/node/error';\n\nimport {errorHandler, Header} from '../utils/utils.js';\n\nimport {\n  DeploymentCompleteQuery,\n  DeploymentCompleteQueryData,\n  DeploymentCompleteResponse,\n} from './graphql/deployment-complete.js';\nimport type {DeploymentConfig} from './types.js';\n\nexport async function deploymentComplete(\n  config: DeploymentConfig,\n  deploymentId: string,\n): Promise<DeploymentCompleteResponse> {\n  const variables = {\n    deploymentId,\n  };\n\n  try {\n    const response: DeploymentCompleteQueryData = await graphqlRequest({\n      query: DeploymentCompleteQuery,\n      api: 'Oxygen',\n      url: `${config.deploymentUrl}/api/v2/admin/graphql`,\n      token: config.deploymentToken.accessToken,\n      variables,\n      addedHeaders: {\n        [Header.OxygenNamespaceHandle]: config.deploymentToken.namespace,\n      },\n    });\n\n    if (response.deploymentComplete.userErrors.length >= 1) {\n      throw new AbortError(\n        `Failed to complete deployment: ${response.deploymentComplete.userErrors[0]?.message}`,\n      );\n    }\n\n    return response.deploymentComplete;\n  } catch (error) {\n    errorHandler(error);\n\n    throw error;\n  }\n}\n"]}