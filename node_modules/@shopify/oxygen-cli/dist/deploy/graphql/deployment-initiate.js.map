{"version":3,"sources":["../../../src/deploy/graphql/deployment-initiate.ts"],"names":[],"mappings":"AAEO,MAAM,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {OxygenError} from '../types.js';\n\nexport const DeploymentInitiateQuery = `\n  mutation DeploymentInitiate($buildId: ID, $environment: EnvironmentSelectorInput, $labels: [String!], $files: [FileInput!]!, $isPrivate: Boolean) {\n    deploymentInitiate(buildId: $buildId, environment: $environment, labels: $labels, files: $files, isPrivate: $isPrivate) {\n      deployment {\n        id\n      }\n      deploymentTargets {\n        filePath\n        fileSize\n        uploadUrl\n        fileType\n        parameters {\n          name\n          value\n        }\n      }\n      userErrors {\n        message\n      }\n    }\n  }\n`;\n\nexport interface DeploymentInitiateQueryData {\n  deploymentInitiate: DeploymentInitiateResponse;\n}\n\nexport interface DeploymentInitiateResponse {\n  deployment: Deployment;\n  deploymentTargets: DeploymentTargetResponse[];\n  userErrors: OxygenError[];\n}\n\nexport interface DeploymentTargetResponse {\n  filePath: string;\n  fileSize: number;\n  uploadUrl: string;\n  fileType: string;\n  parameters: DeploymentInitiateParameters[] | null;\n}\n\ninterface Deployment {\n  id: string;\n}\n\ninterface DeploymentInitiateParameters {\n  name: string;\n  value: string;\n}\n"]}